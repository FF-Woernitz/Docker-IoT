networks:
  default:
    driver: bridge

volumes:
  mosquitto-data:
  node-red-data:
#  influxdb-data:
#  grafana-data:
#  chronograf-data:

services:
  mqtt:
    container_name: mqtt
    image: "eclipse-mosquitto"
    ports:
      - "1883:1883/tcp"
    volumes:
      - mosquitto-data:/mosquitto/data
      - ./mqtt:/mosquitto/config
    environment:
      - TZ=Europe/Berlin
    restart: unless-stopped

  hass:
    container_name: hass
    build:
      context: build-hass
    volumes:
      - ./hass:/config
    environment:
      - TZ=Europe/Berlin
    depends_on:
      - mqtt
#      - influxdb
    restart: unless-stopped
    network_mode: "host"

  node-red:
    container_name: node-red
    image: nodered/node-red
    ports:
      - "1880:1880/tcp"
    extra_hosts:
      - "docker-host:host-gateway"
    volumes:
      - node-red-data:/data
    environment:
      - NODE_RED_ENABLE_PROJECTS=true
      - TZ=Europe/Berlin
    depends_on:
      - hass
    user: node-red
    restart: unless-stopped

  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt
    volumes:
      - ./zigbee2mqtt:/app/data
    ports:
      - "8080:8080/tcp"
    environment:
      - TZ=Europe/Berlin
    restart: unless-stopped

  dali2mqtt:
    container_name: dali2mqtt
    privileged: true
    image: ghcr.io/tobsa13/dali2mqtt:master
    devices:
      - /dev/dali:/dev/dali
    environment:
      - D2M_MQTT_SERVER=mqtt
      - D2M_MQTT_PORT=1883
      - D2M_MQTT_USERNAME=d2m
      - D2M_LOG_LEVEL=debug
      - D2M_LOG_COLOR=true
      - D2M_DALI_LAMPS=24
      - D2M_GROUP_MODE=mean
      - TZ=Europe/Berlin
    env_file: dali2mqtt.env
    restart: unless-stopped

  esphome:
    container_name: esphome
    image: ghcr.io/esphome/esphome
    volumes:
      - ./esphome:/config
    ports:
      - "6052:6052/tcp"
    environment:
      - ESPHOME_DASHBOARD_USE_PING=true
      - TZ=Europe/Berlin
    restart: unless-stopped

  vlmcsd:
    container_name: vlmcsd
    image: ghcr.io/tobsa13/vlmcsd:master
    ports:
      - "1688:1688/tcp"
    restart: unless-stopped

#  influxdb:
#    container_name: influxdb
#    image: influxdb:1.8
#    ports:
#      - "127.0.0.1:8086:8086"
#    volumes:
#      - influxdb-data:/var/lib/influxdb
#    environment:
#      - TZ=Europe/Berlin
#      - INFLUXDB_ADMIN_USER=admin
#      - INFLUXDB_ADMIN_PASSWORD=admin
#    restart: unless-stopped
#
#  grafana:
#    container_name: grafana
#    image: grafana/grafana:latest
#    ports:
#      - "3000:3000"
#    volumes:
#      - grafana-data:/var/lib/grafana
#    depends_on:
#      - influxdb
#    environment:
#      - TZ=Europe/Berlin
#    restart: unless-stopped
#
#  chronograf:
#    container_name: chronograf
#    image: chronograf:latest
#    volumes:
#      - chronograf-data:/var/lib/chronograf
#    depends_on:
#      - influxdb
#    environment:
#      - TZ=Europe/Berlin
#      - INFLUXDB_URL=http://influxdb:8086
#      - INFLUXDB_USERNAME=admin
#      - INFLUXDB_PASSWORD=admin
#    restart: unless-stopped